[metadata]
name = pydash
version = 4.9.2
author = Derrick Gilland
author_email = dgilland@gmail.com
url = https://github.com/dgilland/pydash
description = The kitchen sink of Python utility libraries for doing "stuff" in a functional way. Based on the Lo-Dash Javascript library.
long_description = file: README.rst, CHANGELOG.rst, LICENSE.rst
keywords = pydash utility functional lodash underscore
license = MIT License
classifiers =
    Development Status :: 5 - Production/Stable
    License :: OSI Approved :: MIT License
    Intended Audience :: Developers
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Topic :: Software Development :: Libraries
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Utilities

[options]
package_dir =
    = src
packages = find:
install_requires =

[options.packages.find]
where = src

[options.extras_require]
dev =
    coverage
    black; python_version >= "3.6"
    docformatter
    flake8
    flake8-black; python_version >= "3.6"
    flake8-bugbear; python_version >= "3.6"
    flake8-isort; python_version >= "3.6"
    invoke
    isort; python_version >= "3.6"
    mock
    pylint
    pytest
    pytest-cov
    pytest-flake8
    pytest-pylint
    Sphinx
    sphinx-rtd-theme
    tox
    twine
    wheel


[bdist_wheel]
universal = 1

[flake8]
exclude = .tox,venv,env
max-line-length = 100
max-complexity = 12
# F401 - `module` imported but unused
# F811 - redefinition of unused `name` from line `N`
# E203 - whitespace before ':'
# W503 - line break before binary operator
ignore = F401,F811,E203,W503

[tool:isort]
line_length = 100
multi_line_output = 3
lines_after_imports = 2
combine_as_imports = true
include_trailing_comma = true
force_sort_within_sections = true

[tool:pytest]
junit_family = xunit2
addopts =
    --verbose
    --doctest-modules
    --no-cov-on-fail
    --cov-fail-under=100
    --cov-report=term-missing
    --cov-report=xml:build/coverage/coverage.xml
    --cov-report=html:build/coverage
    --junitxml=build/testresults/junit.xml

[coverage:run]
omit =
    */tests/*
    */test_*
    */_compat.py
